schema {
  query: PlaceNoteQuery
  mutation: PlaceNoteMutation
}

type AccountUserResponse {
  token: String!
  userSettingId: String!
  name: String!
  imageUrl: String
}

"""Date with time (isoformat)"""
scalar DateTime

type GoogleAuthCodeVerifyResponse {
  token: String!
}

input LatLon {
  lat: Float!
  lon: Float!
}

type LatLonResponse {
  lat: Float!
  lon: Float!
}

type PlaceNoteMutation {
  googleAuthCodeVerify(authCode: String!): GoogleAuthCodeVerifyResponse!
  addAccountUserByGoogle(authToken: String!, userSettingId: String!, name: String!, imageFile: Upload): AccountUserResponse!
  loginByGoogleAuthCode(authCode: String!): AccountUserResponse!
  editAccountUser(userSettingId: String!, name: String!, imageFile: Upload): AccountUserResponse!
  addPostCategory(name: String!, parentCategoryId: String, displayOrder: Int, detail: String): Boolean!
  editPostCategory(id: String!, name: String!, parentCategoryId: String, displayOrder: Int, detail: String): Boolean!
  deletePostCategory(id: String!): Boolean!
  addPostPlace(name: String!, address: String, latLon: LatLon, prefectureCode: String, categoryIdList: [String!]!, detail: String, url: String): String!
  editPostPlace(id: String!, name: String!, address: String, latLon: LatLon, prefectureCode: String, categoryIdList: [String!]!, detail: String, url: String): Boolean!
  deletePostPlace(id: String!): Boolean!
  addPost(title: String!, placeId: String!, visitedDate: DateTime!, isOpen: Boolean!, categoryIdList: [String!]!, detail: String, urlList: [String!]!): Boolean!
  editPost(id: String!, title: String!, placeId: String!, visitedDate: DateTime!, isOpen: Boolean!, categoryIdList: [String!]!, detail: String, urlList: [String!]!): Boolean!
  deletePost(id: String!): Boolean!
}

type PlaceNoteQuery {
  getAccountUserByToken: AccountUserResponse!
  getMyPostCategories(nameFilter: String): [PostCategoryResponse!]!
  getMyPostCategoryById(idFilter: String!): PostCategoryResponse!
  getPostPlaces(idFilter: String, categoryFilter: String, nameFilter: String): [PostPlaceResponse!]!
  getLatLonFromAddress(address: String!): LatLonResponse
  getMyPosts(idFilter: String, categoryIdsFilter: [String!], placeIdFilter: String): [PostResponse!]!
}

type PostCategoryResponse {
  id: String!
  userSettingId: String!
  name: String!
  parentCategoryId: String
  displayOrder: Int
  detail: String
}

type PostPlaceInfo {
  id: String!
  name: String!
  prefectureCode: String
  url: String
  address: String
  latLon: LatLonResponse
}

type PostPlaceResponse {
  id: String!
  userSettingId: String!
  name: String!
  categoryIdList: [String!]!
  url: String
  address: String
  latLon: LatLonResponse
  prefectureCode: String
  detail: String
}

type PostResponse {
  id: String!
  userSettingId: String!
  title: String!
  visitedDateStr: String!
  isOpen: Boolean!
  postPlace: PostPlaceInfo!
  categoryIdList: [String!]!
  urlList: [PostUrl!]!
  detail: String
}

type PostUrl {
  url: String!
  urlType: String!
  urlInfo: PostUrlInfo
  embedHtml: String
}

type PostUrlInfo {
  title: String!
  imageUrl: String
  siteName: String
}

scalar Upload